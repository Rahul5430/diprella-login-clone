{"version":3,"sources":["Assets/diprella_logo.svg","Assets/white_logo.svg","Components/NavBar.jsx","Components/Form.jsx","Assets/logo_line.svg","Theme/index.jsx","Components/LinkIconBar.jsx","Data/footerLinks.jsx","LoginForm.jsx","App.js","index.js"],"names":["Logo","logo","useColorModeValue","logoImage","whiteLogo","className","alt","src","htmlHeight","htmlWidth","style","padding","display","ColorModeButton","mr","toggleColorMode","useColorMode","SwitchIcon","FaMoon","FaSun","nextMode","label","aria-label","size","fontSize","variant","color","onClick","icon","marginRight","NavBar","as","w","direction","alignItems","justifyContent","position","zIndex","Login","toast","useToast","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","title","description","duration","status","isClosable","errors","touched","type","name","placeholder","component","h","backgroundColor","borderRadius","outline","border","fontFamily","lineHeight","textAlign","margin","colors","primary","light","dark","secondary","tertiary","subtle","bg","extendTheme","config","initialColorMode","useSystemColorMode","icons","facebook","SiFacebook","googleplus","FaGooglePlus","linkedin","ImLinkedin","LinkIcon","index","onHoverColor","url","href","isExternal","width","height","_hover","LinkIconBar","links","props","iconColor","hoverColor","justify","marginBottom","map","link","SignUp","textColor","opacity","left","top","transition","maxW","letterSpacing","background","maxWidth","whiteSpace","surname","SignIn","marginInlineStart","Overlay","overflow","backgroundImage","transform","document","getElementById","classList","remove","darkLogo","getElementsByClassName","right","add","LoginForm","id","App","theme","Theme","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.62eab7fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/diprella_logo.fee581e7.svg\";","export default __webpack_public_path__ + \"static/media/white_logo.15948a03.svg\";","import { Box, IconButton, Image, Spacer, Stack, Tooltip, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\nimport logoImage from '../Assets/diprella_logo.svg';\r\nimport whiteLogo from '../Assets/white_logo.svg';\r\n\r\nconst Logo = () => {\r\n    const logo = useColorModeValue(logoImage, whiteLogo);\r\n\r\n    return (\r\n        <Box>\r\n            <Image \r\n                className=\"darkLogo\"\r\n                alt=\"logo\"\r\n                src={logo}\r\n                htmlHeight=\"45px\"\r\n                htmlWidth=\"140px\"\r\n                style={{ padding: 10 }}\r\n            />\r\n            <Image \r\n                className=\"whiteLogo\"\r\n                alt=\"logo\"\r\n                src={whiteLogo}\r\n                htmlHeight=\"45px\"\r\n                htmlWidth=\"140px\"\r\n                style={{ padding: 10, display: 'none' }}\r\n            />\r\n        </Box>\r\n    )\r\n};\r\n\r\nconst ColorModeButton = ({ mr }) => {\r\n    const { toggleColorMode } = useColorMode();\r\n    const SwitchIcon = useColorModeValue(FaMoon, FaSun);\r\n    const nextMode = useColorModeValue(\"dark\", \"light\");\r\n\r\n    return (\r\n        <Tooltip\r\n            label={`Toggle ${nextMode} mode`}\r\n            aria-label={`Toggle ${nextMode} mode`}\r\n        >\r\n            <IconButton \r\n                size=\"md\"\r\n                fontSize=\"lg\"\r\n                aria-label={`Toggle ${nextMode} mode`}\r\n                variant=\"ghost\"\r\n                color=\"current\"\r\n                onClick={toggleColorMode}\r\n                icon={<SwitchIcon />}\r\n                style={{ marginRight: mr }}\r\n            />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <Stack\r\n            as=\"header\"\r\n            w=\"100%\"\r\n            direction={[\"row\", \"row\", \"row\", \"row\"]}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            position=\"fixed\"\r\n            zIndex=\"200\"\r\n        >\r\n            <Logo />\r\n            <Spacer />\r\n            <ColorModeButton mr=\"12px\" />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { Button, Stack, useToast } from '@chakra-ui/react';\r\nimport * as Yup from 'yup';\r\n\r\nconst Login = () => {\r\n    const toast = useToast();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ \r\n                email: '',\r\n                password: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string()\r\n                    .email('Email is invalid')\r\n                    .required('Email is required'),\r\n                password: Yup.string()\r\n                    .min(8, 'Password must be at least 8 characters')\r\n                    .required('Password is required')\r\n            })}\r\n            onSubmit={() => {\r\n                toast({\r\n                    title: 'Sign In Successfull',\r\n                    description: 'Welcome Back!!!',\r\n                    position: 'top',\r\n                    duration: '5000',\r\n                    status: 'success',\r\n                    isClosable: true,\r\n                })\r\n            }}\r\n        >\r\n            {({ errors, status, touched }) => (\r\n                <Form\r\n                    style={{ alignItems: \"center\" }}\r\n                >\r\n                    <Stack as='fieldset'>\r\n                        <Stack as='fieldset'>\r\n                            <Field type=\"text\" name=\"email\" placeholder=\"Email\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </Stack>\r\n                        <Stack as='fieldset'>\r\n                            <Field type=\"password\" name=\"password\" placeholder=\"Password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </Stack>\r\n                    </Stack>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        w={235}\r\n                        h={54}\r\n                        backgroundColor=\"#28b498\"\r\n                        borderRadius={30}\r\n                        outline={0}\r\n                        border=\"none\"\r\n                        justifyContent=\"center\"\r\n                        color=\"#fff\"\r\n                        alignItems=\"center\"\r\n                        fontFamily=\"'GothamPro Medium', serif\"\r\n                        fontSize=\"0.875rem\"\r\n                        lineHeight={16}\r\n                        textAlign=\"center\"\r\n                        margin=\"32px 0\"\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/logo_line.dea98084.svg\";","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst config = {\r\n    initialColorMode: \"light\",\r\n    useSystemColorMode: false\r\n};\r\n\r\nexport const colors = {\r\n    primary: {\r\n        light: \"#F7F8FA\",\r\n        dark: \"#252934\",\r\n    },\r\n    secondary: {\r\n        light: \"#1ca7d0\",\r\n        dark: \"#90cdf4\",\r\n    },\r\n    tertiary: {\r\n        light: \"#736CED\",\r\n        dark: \"#0056b3\",\r\n    },\r\n    subtle: {\r\n        light: \"gray.400\",\r\n        dark: \"#FFFFFF\",\r\n    },\r\n    bg: {\r\n        light: \"#fff\",\r\n        dark: \"#343a40\",\r\n    },\r\n    dark: {\r\n        light: \"\",\r\n        dark: \"\",\r\n    },\r\n    light: {\r\n        light: \"\",\r\n        dark: \"\",\r\n    },\r\n};\r\n\r\nexport default extendTheme({\r\n    config,\r\n    colors\r\n});","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport { Icon, Link, Stack, Tooltip, useColorModeValue } from \"@chakra-ui/react\";\r\nimport { SiFacebook } from 'react-icons/si';\r\nimport { FaGooglePlus } from 'react-icons/fa';\r\nimport { ImLinkedin } from 'react-icons/im';\r\n\r\nimport { colors } from '../Theme';\r\n\r\nconst icons = {\r\n    facebook: SiFacebook,\r\n    googleplus: FaGooglePlus,\r\n    linkedin: ImLinkedin,\r\n};\r\n\r\nconst LinkIcon = ({ index, color, onHoverColor, url, label, icon }) => (\r\n\t<Tooltip\r\n\t\tlabel={label}\r\n\t\taria-label={`${label}-tooltip`}\r\n\t\tkey={`link-${index}`}\r\n\t>\r\n\t\t<Link\r\n\t\t\taria-label={`Open link to ${url}`}\r\n\t\t\tdisplay='inline-block'\r\n\t\t\thref={url}\r\n\t\t\tisExternal\r\n            style={{ \r\n                margin: '0 1rem 0 0',\r\n                width: '3.2rem',\r\n                height: '3.2rem' \r\n            }}\r\n\t\t>\r\n\t\t\t<Icon\r\n\t\t\t\tas={icons[icon]}\r\n\t\t\t\tfontSize='xl'\r\n\t\t\t\tcolor={color}\r\n\t\t\t\t_hover={{ color: onHoverColor }}\r\n                w={51}\r\n                h={51}\r\n                borderRadius=\"100%\"\r\n\t\t\t/>\r\n\t\t</Link>\r\n\t</Tooltip>\r\n);\r\n\r\nconst LinkIconBar = ({ links, color, onHoverColor, ...props }) => {\r\n    const iconColor = color || useColorModeValue('#47546D', colors.secondary.light);\r\n    const hoverColor = onHoverColor || useColorModeValue(colors.secondary.light, colors.secondary.dark);\r\n\r\n    return (\r\n        <Stack\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            // mb=\"1.5rem\"\r\n            style={{ marginBottom: '1.5rem' }}\r\n            {...props}\r\n        >\r\n            {links.map((link, index) => (\r\n                <LinkIcon \r\n                    key={link.label}\r\n                    index={index}\r\n                    color={iconColor}\r\n                    onHoverColor={hoverColor}\r\n                    {...link}\r\n                />\r\n            ))}\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default LinkIconBar;","const links = [\r\n    {\r\n        label: 'Facebook',\r\n        icon: 'facebook',\r\n        href: '#',\r\n        // color: '#47546D',\r\n    },\r\n    {\r\n        label: 'Google+',\r\n        icon: 'googleplus',\r\n        href: '#',\r\n        color: '#DF4D3B',\r\n    },\r\n    {\r\n        label: 'LinkedIn',\r\n        icon: 'linkedin',\r\n        href: '#',\r\n        // color: '#47546D',\r\n    },\r\n];\r\n\r\nexport default links;","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Heading, Image, Text, Stack, useColorModeValue, useToast } from \"@chakra-ui/react\";\r\n\r\nimport line from './Assets/logo_line.svg';\r\nimport Login from \"./Components/Form\";\r\nimport LinkIconBar from \"./Components/LinkIconBar\";\r\nimport links from \"./Data/footerLinks\";\r\nimport { colors } from './Theme';\r\n\r\nconst SignUp = ({ bg, textColor }) => {\r\n    const toast = useToast();\r\n\r\n    return (\r\n        <Stack\r\n            className=\"form-container sign-up-container\"\r\n            bg={bg}\r\n            opacity={0}\r\n            left=\"0\"\r\n            width=\"50%\"\r\n            zIndex={1}\r\n            height=\"100%\"\r\n            position=\"absolute\"\r\n            top=\"0\"\r\n            transition=\"all 0.6s ease-in-out;\"\r\n        >\r\n            <Stack\r\n                display=\"flex !important\"\r\n                alignItems=\"center !important\"\r\n                justifyContent=\"center !important\"\r\n                padding=\"0 50px\"\r\n                height=\"100%\"\r\n                textAlign=\"center\"\r\n            >\r\n                <Heading\r\n                    as=\"h1\"\r\n                    style={{ fontFamily: '\"GothamPro Medium\", serif' }}\r\n                >\r\n                    Create Free Account\r\n                </Heading>\r\n                <Text\r\n                    maxW=\"100%\"\r\n                    color={textColor}\r\n                    style={{ fontFamily: '\"GothamPro\", serif', marginBottom: '16px' }}\r\n                    fontSize=\"1.125rem\"\r\n                    textAlign=\"center\"\r\n                    letterSpacing={0}\r\n                    // mb=\"16px\"\r\n                >\r\n                    Sign up using social networks\r\n                </Text>\r\n                <LinkIconBar links={links} />\r\n                <Stack\r\n                    background=\"url('/diprella-login-clone/static/media/logo_line.dea98084.svg') center center repeat-x\"\r\n                    maxWidth=\"460px\"\r\n                    width=\"100%\"\r\n                    marginBottom=\"8px !important\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <Text\r\n                        as=\"div\"\r\n                        bg={bg}\r\n                        // maxW=\"100%\"\r\n                        color={textColor}\r\n                        style={{ fontFamily: '\"GothamPro\", serif' }}\r\n                        fontSize=\"0.6875rem\"\r\n                        textAlign=\"center\"\r\n                        letterSpacing={0}\r\n                        padding=\"0 8px\"\r\n                        margin=\"0 auto\"\r\n                        width=\"33px\"\r\n                        // wordBreak=\"keep-all\"\r\n                        whiteSpace=\"nowrap\"\r\n                    >\r\n                        OR\r\n                    </Text>\r\n                </Stack>\r\n                <Formik\r\n                    initialValues={{ \r\n                        email: '',\r\n                        password: '',\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        name: Yup.string()\r\n                            .required('Name is required'),\r\n                        surname: Yup.string()\r\n                            .required('Surname is required'),\r\n                        email: Yup.string()\r\n                            .email('Email is invalid')\r\n                            .required('Email is required'),\r\n                        password: Yup.string()\r\n                            .min(8, 'Password must be at least 8 characters')\r\n                            .required('Password is required')\r\n                    })}\r\n                    onSubmit={() => {\r\n                        toast({\r\n                            title: 'Sign Up Successfull',\r\n                            description: \"We've created your account for you.\",\r\n                            position: 'top',\r\n                            duration: '5000',\r\n                            status: 'success',\r\n                            isClosable: true,\r\n                        })\r\n                    }}\r\n                >\r\n                    {({ errors, status, touched }) => (\r\n                        <Form\r\n                            style={{ alignItems: \"center\" }}\r\n                        >\r\n                            <Stack as='fieldset'>\r\n                                <Stack as='fieldset'>\r\n                                    <Field type=\"text\" name=\"name\" placeholder=\"Name\" className={'form-control' + (errors.name && touched.name ? ' is-invalid' : '')} />\r\n                                    <ErrorMessage name=\"name\" component=\"div\" className=\"invalid-feedback\" />\r\n                                </Stack>\r\n                                <Stack as='fieldset'>\r\n                                    <Field type=\"text\" name=\"surname\" placeholder=\"Surname\" className={'form-control' + (errors.surname && touched.surname ? ' is-invalid' : '')} />\r\n                                    <ErrorMessage name=\"surname\" component=\"div\" className=\"invalid-feedback\" />\r\n                                </Stack>\r\n                                <Stack as='fieldset'>\r\n                                    <Field type=\"text\" name=\"email\" placeholder=\"Email\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\r\n                                    <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                </Stack>\r\n                                <Stack as='fieldset'>\r\n                                    <Field type=\"password\" name=\"password\" placeholder=\"Password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\r\n                                    <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\r\n                                </Stack>\r\n                            </Stack>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                w={235}\r\n                                h={54}\r\n                                backgroundColor=\"#28b498\"\r\n                                borderRadius={30}\r\n                                outline={0}\r\n                                border=\"none\"\r\n                                justifyContent=\"center\"\r\n                                color=\"#fff\"\r\n                                alignItems=\"center\"\r\n                                fontFamily=\"'GothamPro Medium', serif\"\r\n                                fontSize=\"0.875rem\"\r\n                                lineHeight={16}\r\n                                textAlign=\"center\"\r\n                                margin=\"32px 0\"\r\n                            >\r\n                                Sign Up\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nconst SignIn = ({ bg, textColor }) => {\r\n    return (\r\n        <Stack\r\n            className=\"form-container sign-in-container\"\r\n            bg={bg}\r\n            left=\"0\"\r\n            width=\"50%\"\r\n            height=\"100vh\"\r\n            zIndex={2}\r\n            position=\"absolute\"\r\n            top=\"0\"\r\n            transition=\"all 0.6s ease-in-out;\"\r\n            marginInlineStart=\"0 !important\"\r\n        >\r\n            <Stack\r\n                display=\"flex !important\"\r\n                alignItems=\"center !important\"\r\n                justifyContent=\"center !important\"\r\n                padding=\"0 50px\"\r\n                height=\"100%\"\r\n                textAlign=\"center\"\r\n            >\r\n                <Heading\r\n                    as=\"h1\"\r\n                    style={{ fontFamily: '\"GothamPro Medium\", serif' }}\r\n                >\r\n                    Login to Your Account\r\n                </Heading>\r\n                <Text\r\n                    maxW=\"100%\"\r\n                    color={textColor}\r\n                    style={{ fontFamily: '\"GothamPro\", serif', marginBottom: '16px' }}\r\n                    fontSize=\"1.125rem\"\r\n                    textAlign=\"center\"\r\n                    letterSpacing={0}\r\n                    // mb=\"16px\"\r\n                >\r\n                    Login using social networks\r\n                </Text>\r\n                <LinkIconBar links={links} />\r\n                <Stack\r\n                    background=\"url('/diprella-login-clone/static/media/logo_line.dea98084.svg') center center repeat-x\"\r\n                    maxWidth=\"460px\"\r\n                    width=\"100%\"\r\n                    marginBottom=\"8px !important\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <Text\r\n                        as=\"div\"\r\n                        bg={bg}\r\n                        // maxW=\"100%\"\r\n                        color={textColor}\r\n                        style={{ fontFamily: '\"GothamPro\", serif' }}\r\n                        fontSize=\"0.6875rem\"\r\n                        textAlign=\"center\"\r\n                        letterSpacing={0}\r\n                        padding=\"0 8px\"\r\n                        margin=\"0 auto\"\r\n                        width=\"33px\"\r\n                        // wordBreak=\"keep-all\"\r\n                        whiteSpace=\"nowrap\"\r\n                    >\r\n                        OR\r\n                    </Text>\r\n                </Stack>\r\n                <Login />\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nconst Overlay = () => {\r\n    const handleRightOnClick = () => {\r\n        const container = document.getElementById('container');\r\n\r\n        container.classList.add('right-panel-active');\r\n\r\n        const darkLogo = document.getElementsByClassName('darkLogo')[0];\r\n        const whiteLogo = document.getElementsByClassName('whiteLogo')[0];\r\n\r\n        darkLogo.style.display = 'none';\r\n        whiteLogo.style.display = 'block';\r\n    };\r\n\r\n    const handleLeftOnClick = () => {\r\n        const container = document.getElementById('container');\r\n\r\n        container.classList.remove('right-panel-active');\r\n\r\n        const darkLogo = document.getElementsByClassName('darkLogo')[0];\r\n        const whiteLogo = document.getElementsByClassName('whiteLogo')[0];\r\n\r\n        darkLogo.style.display = 'block';\r\n        whiteLogo.style.display = 'none';        \r\n    };\r\n\r\n    return (\r\n        <Stack\r\n            className=\"overlay-container\"\r\n            as=\"section\"\r\n            left=\"50%\"\r\n            width=\"50%\"\r\n            height=\"100%\"\r\n            position=\"absolute\"\r\n            overflow=\"hidden\"\r\n            transition=\"all 0.6s ease-in-out;\"\r\n            zIndex={100}\r\n            backgroundImage=\"linear-gradient(253deg, #3ba5b4, #38ba8a 100%)\"\r\n            marginInlineStart=\"0 !important\"\r\n        >\r\n            <Stack\r\n                className=\"overlay\"\r\n                position=\"relative\"\r\n                left=\"-100%\"\r\n                width=\"200%\"\r\n                height=\"100%\"\r\n                background=\"0 0\"\r\n                transform=\"translateX(0)\"\r\n                transition=\"all 0.6s ease-in-out;\"\r\n            >\r\n                <Stack\r\n                    className=\"overlay-left\"\r\n                    transform=\"translateX(-20%)\"\r\n                    position=\"absolute\"\r\n                    display=\"flex !important\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    padding=\"0 40px\"\r\n                    textAlign=\"center\"\r\n                    height=\"100%\"\r\n                    top={0}\r\n                    width=\"50%\"\r\n                    transition=\"all 0.6s ease-in-out;\"\r\n                >\r\n                    <Heading\r\n                        as=\"h1\"\r\n                        style={{\r\n                            fontSize: \"2.375rem\",\r\n                            fontFamily: '\"GothamPro Medium\", serif'\r\n                        }}\r\n                        maxWidth=\"100%\"\r\n                        lineHeight=\"48px\"\r\n                        margin=\"0 0 32px\"\r\n                        textAlign=\"center\"\r\n                        color=\"#fff\"\r\n                    >\r\n                        One Of Us?\r\n                    </Heading>\r\n                    <Text\r\n                        fontSize=\"1.125rem\"\r\n                        maxWidth=\"320px\"\r\n                        style={{ fontFamily: '\"GothamPro\", serif' }}\r\n                        lineHeight=\"36px\"\r\n                        textAlign=\"center\"\r\n                        marginBottom=\"32px !important\"\r\n                        color=\"#fff\"\r\n                    >\r\n                        If you already have an account, just sign in. We've missed you!\r\n                    </Text>\r\n                    <Button\r\n                        w={223}\r\n                        h={54}\r\n                        backgroundColor=\"#fff\"\r\n                        borderRadius={30}\r\n                        outline={0}\r\n                        border=\"none\"\r\n                        justifyContent=\"center\"\r\n                        color=\"#1a1e1d\"\r\n                        alignItems=\"center\"\r\n                        fontFamily=\"'GothamPro Medium', serif\"\r\n                        fontSize=\"0.875rem\"\r\n                        lineHeight={16}\r\n                        textAlign=\"center\"\r\n                        margin=\"32px 0\"\r\n                        onClick={handleLeftOnClick}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </Stack>\r\n                <Stack\r\n                    className=\"overlay-right\"\r\n                    right=\"0\"\r\n                    transform=\"translateX(0)\"\r\n                    position=\"absolute\"\r\n                    display=\"flex !important\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    padding=\"0 40px\"\r\n                    textAlign=\"center\"\r\n                    height=\"100%\"\r\n                    top={0}\r\n                    width=\"50%\"\r\n                    transition=\"all 0.6s ease-in-out;\"\r\n                >\r\n                    <Heading\r\n                        as=\"h1\"\r\n                        style={{\r\n                            fontSize: \"2.375rem\",\r\n                            fontFamily: '\"GothamPro Medium\", serif'\r\n                        }}\r\n                        maxWidth=\"100%\"\r\n                        lineHeight=\"48px\"\r\n                        margin=\"0 0 32px\"\r\n                        textAlign=\"center\"\r\n                        color=\"#fff\"\r\n                    >\r\n                        New Here?\r\n                    </Heading>\r\n                    <Text\r\n                        fontSize=\"1.125rem\"\r\n                        maxWidth=\"320px\"\r\n                        style={{ fontFamily: '\"GothamPro\", serif' }}\r\n                        lineHeight=\"36px\"\r\n                        textAlign=\"center\"\r\n                        marginBottom=\"32px !important\"\r\n                        color=\"#fff\"\r\n                    >\r\n                        Sign up and discover a great amount of new opportunities!\r\n                    </Text>\r\n                    <Button\r\n                        w={223}\r\n                        h={54}\r\n                        backgroundColor=\"#fff\"\r\n                        borderRadius={30}\r\n                        outline={0}\r\n                        border=\"none\"\r\n                        justifyContent=\"center\"\r\n                        color=\"#1a1e1d\"\r\n                        alignItems=\"center\"\r\n                        fontFamily=\"'GothamPro Medium', serif\"\r\n                        fontSize=\"0.875rem\"\r\n                        lineHeight={16}\r\n                        textAlign=\"center\"\r\n                        margin=\"32px 0\"\r\n                        onClick={handleRightOnClick}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </Stack>\r\n            </Stack>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nconst LoginForm = () => {\r\n    const bg = useColorModeValue(colors.bg.light, colors.bg.dark);\r\n    const textColor = useColorModeValue('#555a59', colors.secondary.dark);\r\n\r\n    return (\r\n        <Stack\r\n            direction={[\"column\", \"row\"]}\r\n            className='container'\r\n            id='container'\r\n            // backgroundColor=\"#fff\"\r\n            // borderRadius=\"10px\"\r\n            // boxShadow=\"0 14px 28px rgb(0 0 0 / 25%), 0 10px 10px rgb(0 0 0 / 22%)\"\r\n            position=\"relative\"\r\n            overflow=\"hidden\"\r\n            // width=\"768px\"\r\n            maxWidth=\"100%\"\r\n            // minHeight=\"480px\"\r\n            width=\"100vw\"\r\n            height=\"100vh\"\r\n        >\r\n            <SignUp bg={bg} textColor={textColor} />\r\n            <SignIn bg={bg} textColor={textColor} />\r\n            <Overlay />\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import { ChakraProvider } from '@chakra-ui/react';\r\nimport NavBar from './Components/NavBar';\r\nimport LoginForm from './LoginForm';\r\nimport Theme from './Theme';\r\n\r\nconst App = () => {\r\n    return (\r\n        <ChakraProvider theme={Theme}>\r\n            <NavBar />\r\n            <LoginForm />\r\n        </ChakraProvider>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}